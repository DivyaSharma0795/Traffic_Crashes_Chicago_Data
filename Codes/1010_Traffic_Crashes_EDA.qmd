---
title: "1010_EDA_TrafficCrashes"
format: html
editor: visual
jupyter: ir
---

## EDA - Traffic Crashes Data

```{r}
#Installing Libraries
library(dplyr, quietly = T)
library(tidyverse, quietly = T)
library(Hmisc, quietly = T)
```

```{r}
#File too large to upload to Github - copy stored in local
T_Data = read.csv("C:/Users/divya/OneDrive/Documents/Duke/MIDS/Semester 1/IDS 702 - Statistics/Traffic_Crashes_-_Crashes.csv")
```

```{r}
glimpse(T_Data)
```

```{r}
summary(T_Data)
```

```{r}

basic_eda <- function(data)
{
  glimpse(data)
  describe(data)
}
basic_eda(T_Data)
```

```{r}
Data_Cleaned <- T_Data
```

```{r}

```

#### Cleaning Data

```{r}
#Cleaning Data

#Creating timestamp column for Crash Time 
Data_Cleaned$CRASH_DATE_CLEANED <- strptime(Data_Cleaned$CRASH_DATE, "%m/%d/%Y %H:%M:%S %p")
#Creating timestamp column for Police Notified Time
Data_Cleaned$DATE_POLICE_NOTIFIED_CLEANED <- strptime(Data_Cleaned$DATE_POLICE_NOTIFIED, "%m/%d/%Y %H:%M:%S %p")
#Creating a flag for Damages over $1,500
Data_Cleaned$Damage_Over_1500 <- ifelse("OVER $1,500" == Data_Cleaned$DAMAGE, "1", "0")
#Creating a flag for Injuries
Data_Cleaned$Injury_Flag <- ifelse(Data_Cleaned$INJURIES_TOTAL > 0, 1, 0)
```

```{r}
library(purrr)

Data_Cleaned %>% split(.$Injury_Flag) %>% map(summary)
```

```{r}
as.factor(Data_Cleaned$CRASH_MONTH)
```

```{r}
# Plotting the bar chart
library(ggplot2)
ggplot(Data_Cleaned, aes(x = as.factor(CRASH_MONTH), y = Injury_Flag)) + geom_bar(stat = "identity") +
  labs(title = "Relationship between Injuries and Month", x = "Month", y = "#Injuries") +
    theme(legend.position = "bottom")

```

```{r}
# Plotting the bar chart
library(ggplot2)
ggplot(Data_Cleaned, aes(x = as.factor(CRASH_DAY_OF_WEEK), y = Injury_Flag)) + geom_bar(stat = "identity") +
  labs(title = "Relationship between Injuries and Day of Week", x = "Day of Week", y = "#Injuries") +
    theme(legend.position = "bottom")
```

```{r}
# Plotting the bar chart
library(ggplot2)
ggplot(Data_Cleaned, aes(x = as.factor(CRASH_HOUR), y = Injury_Flag)) + geom_bar(stat = "identity") +
  labs(title = "Relationship between Injuries and Time of Day", x = "Time of Day", y = "#Injuries") +
    theme(legend.position = "bottom")
```

```{r}
# Plotting the bar chart
library(ggplot2)
ggplot(Data_Cleaned, aes(x = as.factor(NUM_UNITS), y = Injury_Flag)) + geom_bar(stat = "identity") +
  labs(title = "Relationship between Injuries and #Units in crash", x = "#Units in crash", y = "#Injuries") +
    theme(legend.position = "bottom")
```

```{r}
# Plotting the bar chart
library(ggplot2)
ggplot(Data_Cleaned, aes(x = as.factor(STREET_DIRECTION), y = Injury_Flag)) + geom_bar(stat = "identity") +
  labs(title = "Relationship between Injuries and Street Direction", x = "Street Direction", y = "#Injuries") +
    theme(legend.position = "bottom")
```

```{r}
# Plotting the bar chart
library(ggplot2)
ggplot(Data_Cleaned, aes(x = as.factor(DAMAGE), y = Injury_Flag)) + geom_bar(stat = "identity") +
  labs(title = "Relationship between Injuries and Damage", x = "Damage", y = "#Injuries") +
    theme(legend.position = "bottom")
```

```{r}
# Plotting the bar chart
library(ggplot2)
ggplot(Data_Cleaned, aes(x = as.factor(ROAD_DEFECT), y = Injury_Flag)) + geom_bar(stat = "identity") +
  labs(title = "Relationship between Injuries and Road Defects", x = "Road Defects", y = "#Injuries") +
    theme(legend.position = "bottom") +theme(axis.text.x = element_text(angle = 90)) 
```

```{r}
# Plotting the bar chart
library(ggplot2)
ggplot(Data_Cleaned, aes(x = as.factor(TRAFFICWAY_TYPE), y = Injury_Flag)) + geom_bar(stat = "identity") +
  labs(title = "Relationship between Injuries and Traffic Type", x = "Traffic Type", y = "#Injuries") +
    theme(legend.position = "bottom") +theme(axis.text.x = element_text(angle = 90)) 
```

```{r}
# Plotting the bar chart
library(ggplot2)
ggplot(Data_Cleaned, aes(x = as.factor(WEATHER_CONDITION), y = Injury_Flag)) + geom_bar(stat = "identity") +
  labs(title = "Relationship between Injuries and Weather", x = "Weather", y = "#Injuries") +
    theme(legend.position = "bottom") +theme(axis.text.x = element_text(angle = 90)) 
```

```{r}
# Plotting the bar chart
library(ggplot2)
ggplot(Data_Cleaned, aes(x = as.factor(DEVICE_CONDITION), y = Injury_Flag)) + geom_bar(stat = "identity") +
  labs(title = "Relationship between Injuries and Device Condition", x = "Device Condition", y = "#Injuries") +
    theme(legend.position = "bottom") +theme(axis.text.x = element_text(angle = 90)) 
```

```{r}
# Plotting the bar chart
library(ggplot2)
ggplot(Data_Cleaned, aes(x = as.factor(TRAFFIC_CONTROL_DEVICE), y = Injury_Flag)) + geom_bar(stat = "identity") +
  labs(title = "Relationship between Injuries and Traffic Control Device", x = "Traffic Control Device Condition", y = "#Injuries") +
    theme(legend.position = "bottom") +theme(axis.text.x = element_text(angle = 90)) 
```
